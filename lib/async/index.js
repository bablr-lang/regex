/* @macrome
 * @generatedby @macrome/generator-typescript
 * @generatedfrom ./index.ts#1649429742420
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
"use strict";
Object.defineProperty(exports, "__esModule", {
  value: true
});

Object.defineProperty(exports, "Pattern", {
  enumerable: true,

  get: function() {
    return _pattern.Pattern;
  }
});

(exports.execGlobal = (exports.exec = void 0));

Object.defineProperty(exports, "parse", {
  enumerable: true,

  get: function() {
    return _pattern.parse;
  }
});

(exports.test = void 0);
var _asyncPeekerate = _interopRequireDefault(require("iter-tools-es/methods/async-peekerate"));
var _api = require("./api");
var _engine = require("../internal/engine");

var _pattern = require("../pattern");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

const { exec, test, execGlobal } = new _api.AsyncApi(async function* generate(
  pattern,
  iterable,
) {
  const peekr = await (0, _asyncPeekerate.default)(iterable);
  const engine = new _engine.Engine(pattern);

  try {
    let value;
    let done = false;

    engine.feed(null);

    while (!done && !peekr.done) {
      if (engine.width === 0) {
        engine.feed(peekr.value);

        ({ value, done } = engine.step0());
        yield* value;
      } else {
        engine.step1();

        await peekr.advance();
      }
    }

    engine.feed(null);

    ({ value, done } = engine.step0());
    yield* value;
  } finally {
    await peekr.return();
  }
});

exports.execGlobal = execGlobal;
exports.test = test;
exports.exec = exec;
