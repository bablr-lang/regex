/* @macrome
 * @generatedby /node_modules/@macrome/generator-typescript/lib/index.js
 * @generatedfrom ./chunked.ts#1640624205053
 * This file is autogenerated. Please do not edit it directly.
 * When editing run `npx macrome watch` then change the file this is generated from.
 */
import asyncPeekerate from 'iter-tools-es/methods/async-peekerate';
import peekerate from 'iter-tools-es/methods/peekerate';
import { apiFactory } from './api-factory';
import { Engine } from '../engine';
import { map } from './utils';
export { parse } from '../regex';
export const {
  exec,
  test,
  execGlobal
} = apiFactory(async function* generate(pattern, iterable) {
  const engine = new Engine(pattern);
  let chunkPeekr = await asyncPeekerate(map(iterable, peekerate));
  let idx = 0;
  let value, done;
  const empty = chunkPeekr.done || chunkPeekr.value.done;

  try {
    ({
      value,
      done
    } = engine.step0(true, empty, idx, chunkPeekr.value && chunkPeekr.value.value));
    if (value !== null) yield* value;
    if (empty) return;
    let peekr = chunkPeekr.value;

    try {
      while (!done && !peekr.done) {
        engine.step1(peekr.value);
        peekr = peekr.advance();

        if (peekr.done) {
          chunkPeekr = await chunkPeekr.advance();

          if (chunkPeekr.done) {
            // there may be a final empty chunk
            // and we want a single check for doneness
            // so always simulate a final empty chunk
            peekr = peekerate([]);
          } else {
            peekr = chunkPeekr.value;
          }
        }

        ({
          value,
          done
        } = engine.step0(false, peekr.done, idx, peekr.value));
        if (value !== null) yield* value;
        idx++;
      }
    } finally {
      peekr.return();
    }
  } finally {
    await chunkPeekr.return();
  }
});